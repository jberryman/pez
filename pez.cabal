Name:                pez
Version:             0.1.0
Synopsis:            A Pretty Extraordinary Zipper library
Homepage:            http://coder.bsimmons.name/blog/2011/04/pez-zipper-library-released/

Description:         PEZ is a generic zipper library. It uses lenses from the "fclabels" package to
                     reference a \"location\" to move to in the zipper. The zipper is restricted to
                     types in the 'Typeable' class, allowing the user to \"move up\" through complex data
                     structures such as mutually-recursive types.
                     .
                     Both the Typeable class and fclabels lenses can be derived in GHC, making it
                     easy for the programmer to use a zipper with a minimum of boilerplate.
                     .
                     Please send any feature requests or bug reports along.
                     .
                     Changes 0.0.4 -> 0.1.0:
                     >  - 'ZPath' renamed 'Motion', (Up Int) is an instance
                     >  - 'moveTo' changed to 'move'
                     >  - zipper operations in Maybe by default
                     >  - use fclabels 1.0
 

License:             BSD3
License-file:        LICENSE
Author:              Brandon Simmons
Maintainer:          brandon.m.simmons@gmail.com

-- A copyright notice.
Copyright:           Brandon Simmons, 2011

-- Stability of the pakcage (experimental, provisional, stable...)
Stability:           Experimental
Category:            Data
Build-type:          Simple

-- Extra files to be distributed with the package, such as examples or
-- a README.
Extra-source-files:  EXAMPLES/Examples.lhs, Tests.hs

-- Constraint on the version of Cabal needed to build this package.
Cabal-version:       >=1.2.3


Library
  -- Modules exported by the library.
  Exposed-modules:     Data.Typeable.Zipper
  
  -- Packages needed in order to build this package.
  Build-depends:       base >= 4 && < 5
                     , fclabels >= 1.0
                     , thrist >= 0.2 && < 0.3
                     -- these are required simply for declaring type of (:~>)
                     , transformers
                     , mtl

  Extensions:        GeneralizedNewtypeDeriving
                   , TypeOperators
                   , TemplateHaskell
                   , GADTs
                   , DeriveDataTypeable
  
  -- Modules not exported by this package.
  --Other-modules:     Data.Record.Label.Prelude  
